#include "mbed.h"
 //sensors
DigitalIn R3(PTA13);
DigitalIn R2(PTD5);
DigitalIn R1(PTD0);
DigitalIn L1(PTD2);
DigitalIn L2(PTD3);
DigitalIn L3(PTA17);
    //Right
PwmOut PwmR(PTA12);
DigitalOut Rforward(PTA2);
DigitalOut Rbackward(PTD4);
    //Left
PwmOut PwmL(PTA1);
DigitalOut Lforward(PTA5);
DigitalOut Lbackward(PTA4);
DigitalOut magnet(PTE31);

void controlLeft(float dutycycle, bool direction) {
    if (PwmL != dutycycle){
       PwmL = dutycycle;
   }
    if (direction == 1){
        Lforward = 1;
        Lbackward =0;
    }
    else{
        Lforward = 0;
        Lbackward = 1;
    }
}    
void controlRight(float dutycycle, bool direction) {
    if (PwmR != dutycycle){
       PwmR = dutycycle;
    }
    if (direction == 1){
        Rforward = 1;
        Rbackward =0;
    }
    else{
        Rforward = 0;
       Rbackward = 1;
    }
}    

void go_forward (){
  controlLeft(0.15,1);
  controlRight(0.15,1);
}

void turn_left (){
  controlLeft(0.6,0);
  controlRight(0.6,1);
}

void turn_left_slow (){
  controlLeft(0.5,0);
  controlRight(0.5,1);
}

void turn_right(){
   controlLeft(0.6,1);
  controlRight(0.6,0);
}

void turn_right_slow(){
   controlLeft(0.5,1);
  controlRight(0.5,0);
}

void find_line(){
  controlLeft(0.4,0);
  controlRight(0.4,0);
}

void stop(){
    PwmR = 0;
    PwmL = 0;
}

int main(){
    magnet=1;
    int cases = 0;
    while(1){
if (L3==1 && L2==1 && R3==1 && R2==1 &&(R1==0 || L1==0)){
    cases=1;
}else if (L2==0){
    cases=2;
}else if (R2==0){
    cases =3;
}else {
    find_line();
}
switch(cases){
    case 1:
    go_forward();
    break;

    case 2:
    turn_left_slow();
    while(1){
         if (L1==0){
    go_forward();
    break;
    }else if (L3==0) {
    turn_left();
    break;
    }
    }

    case 3:
    turn_right_slow();
    while(1){
         if (R1==0){
    go_forward();
    break;
    }else if (R3==0){
    turn_right();
    break;
    }
    }
}

 wait_us(10000);
 }

}
